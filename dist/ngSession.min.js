angular.module("ngSession",[]).service("Session",["$log","$rootScope","$cacheFactory",function(a,b,c){function d(b,c){return scope.$$phase||scope.$root.$$phase?c():scope.$apply(c),session?(store.set(e+":session",session),a.debug("Cached session.")):(store.remove("session:session"),a.debug("Removed cached session.",session)),scope.$emit(e+":"+b,session),"loaded"!==b?scope.$emit(e+":loaded",session):void 0}var e="session";c(e);return session=null,isAuthenticated=!1,scope=b,TAG="Session::",this.$get=function(){return{config:this.config}},this.config=function(a){return a?(a.prefix&&(e=a.prefix),a.scope&&(scope=a.scope),a):!1},this.isAuthenticated=function(){return isAuthenticated},this.start=function(a){return d("login",function(){session=a,isAuthenticated=!0}),this},this.end=function(){return d("logout",function(){session=null,isAuthenticated=!1}),this},this.load=function(){return d("loaded",function(){session=store.get(e+":session"),session&&(isAuthenticated=!0)}),this},this.get=function(a){return session[a]},this.set=function(b,c){return a.debug(TAG+"set","Updating "+b,c),d("updated:"+b,function(){session[b]=c}),this},this.setAll=function(b){return a.debug(TAG+"setAll",b),d("updated",function(){for(var a in b)b.hasOwnProperty(a)&&(session[a]=b[a])}),this},this}]);